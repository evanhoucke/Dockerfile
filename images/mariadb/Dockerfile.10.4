# vim:set ft=dockerfile:
FROM registry.cn-hongkong.aliyuncs.com/imxieke/ubuntu:bionic

ENV MARIADB_MAJOR="10.4" \
	MARIADB_VERSION="1:10.4.0+maria~bionic" \
	MYSQL_ROOT_PASSWORD="root"

ENV GPG_KEYS \
	199369E5404BD5FC7D2FE43BCBCB082A1BB943DB \
	177F4010FE56CA3336300305F1656F24C74CD1D8 \
	430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A \
	4D1BB29D63D98E422B2113B19334A25F8507EFA5

COPY script/docker-entrypoint-10.4.sh /usr/local/bin/docker-entrypoint.sh

RUN set -ex; \
	groupadd -r mysql \
	&& useradd -r -g mysql mysql \
	&& apt-get update \
	&& apt-get install -y --no-install-recommends sudo gnupg dirmngr apt-transport-https ca-certificates \
	&& export GNUPGHOME="$(mktemp -d)" \
	&& mkdir /docker-entrypoint-initdb.d \
	&& export GNUPGHOME="$(mktemp -d)"; \
	for key in $GPG_KEYS; do \
		gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key"; \
	done; \
	gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mariadb.gpg; \
	command -v gpgconf > /dev/null && gpgconf --kill all || :; \
	rm -r "$GNUPGHOME" \
	&& apt-key list \
	&& echo "deb https://mirrors.aliyun.com/mariadb/repo/$MARIADB_MAJOR/ubuntu bionic main" > /etc/apt/sources.list.d/mariadb.list; \
	{ \
		echo 'Package: *'; \
		echo 'Pin: release o=MariaDB'; \
		echo 'Pin-Priority: 999'; \
	} > /etc/apt/preferences.d/mariadb ; \
	{ \
		echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password password 'unused'; \
		echo "mariadb-server-$MARIADB_MAJOR" mysql-server/root_password_again password 'unused'; \
	} | debconf-set-selections; \
	backupPackage='mariadb-backup'; \
	apt update \
	&& apt-get install -y --no-install-recommends "mariadb-server=$MARIADB_VERSION" $backupPackage socat \
	# percona-xtrabackup/mariadb-backup is installed at the same time so that `mysql-common` is only installed once from just mariadb repos
	# comment out any "user" entires in the MySQL config ("docker-entrypoint.sh" or "--user" will handle user switching)
	&& sed -ri 's/^user\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/*; \
	# purge and re-create /var/lib/mysql with appropriate ownership
	rm -rf /var/lib/mysql; \
	mkdir -p /var/lib/mysql /var/run/mysqld; \
	chown -R mysql:mysql /var/lib/mysql /var/run/mysqld; \
	# ensure that /var/run/mysqld (used for socket and lock files) is writable regardless of the UID our mysqld instance ends up having at runtime
	chmod 777 /var/run/mysqld; \
	# comment out a few problematic configuration values
	find /etc/mysql/ -name '*.cnf' -print0 \
		| xargs -0 grep -lZE '^(bind-address|log)' \
		| xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/'; \
	# don't reverse lookup hostnames, they are usually another container
	echo '[mysqld]\nskip-host-cache\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf \
	&& apt autoremove -y \
	&& apt-get clean all \
	&& rm -fr /var/lib/apt/lists/* \
	&& chmod +x /usr/local/bin/docker-entrypoint.sh

VOLUME /var/lib/mysql
ENTRYPOINT ["/usr/local/bin/docker-entrypoint.sh"]
EXPOSE 3306
CMD ["mysqld"]